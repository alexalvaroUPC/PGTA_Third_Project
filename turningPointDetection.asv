function [aircraft] = turningPointDetection(aircraft, tVector)
LATdvor = 41.307111;
LONdvor = 2.107806;
radLATdvor = deg2rad(LATdvor);
radLONdvor = deg2rad(LONdvor);
for i=1:numel(aircraft)
    myAC = aircraft(i);
    if ~all(isnan(myAC.HDG))
        interpolatedHDG = interp1(myAC.TIMEseconds,myAC.HDG,tVector, 'makima');
        interpolatedHDG = smartInterpolation(myAC.TIMEseconds, myAC.HDG, tVector, myAC.interpStart, myAC.interpEnd);
        myAC.HDGinterp = interpolatedHDG;
        differentialHDG = diff(myAC.HDGinterp);
        interpolatedLAT = interp1(myAC.TIMEseconds,myAC.LAT,tVector, 'makima');
        interpolatedLAT(1:myAC.interpStart-1) = -400;
        interpolatedLAT(myAC.interpEnd+1:end) = -400;
        myAC.LATinterp = interpolatedLAT;
        interpolatedLON = interp1(myAC.TIMEseconds,myAC.LON,tVector, 'makima');
        interpolatedLON(1:myAC.interpStart-1) = -400;
        interpolatedLON(myAC.interpEnd+1:end) = -400;
        myAC.LONinterp = interpolatedLON;
        interpolatedU = interp1(myAC.TIMEseconds,myAC.U,tVector, 'makima');
        interpolatedU(1:myAC.interpStart-1) = -400;
        interpolatedU(myAC.interpEnd+1:end) = -400;
        myAC.Uinterp = interpolatedU;
        interpolatedV = interp1(myAC.TIMEseconds,myAC.V,tVector, 'makima');
        interpolatedV(1:myAC.interpStart-1) = -400;
        interpolatedV(myAC.interpEnd+1:end) = -400;
        myAC.Vinterp = interpolatedV;
        if ~all(isnan(myAC.Alt))
            interpolatedAlt = interp1(myAC.TIMEseconds,myAC.Alt,tVector, 'makima');
            interpolatedAlt(1:myAC.interpStart-1) = -400;
            interpolatedAlt(myAC.interpEnd+1:end) = -400;
            myAC.AltInterp = interpolatedAlt;
        end


        for j = 1:numel(differentialHDG)
            radLATt = deg2rad(myAC.LATinterp(j));
            radLONt = deg2rad(myAC.LONinterp(j));
            radial = atan2(sin(radLONt-radLONdvor)*cos(radLATt), cos(radLATdvor)*sin(radLATt)-sin(radLATdvor)*cos(radLATt)*cos(radLONt-radLONdvor));
            radial = rad2deg(radial);
            if radial<0 radial = radial+360; end
            % aircraft(i).radials(j) = radial;
            if differentialHDG(j) <-1.2 && differentialHDG(j) > -390
                aircraft(i).turningLAT = myAC.LATinterp(j);
                aircraft(i).turningLON = myAC.LONinterp(j);
                aircraft(i).turningAlt = myAC.AltInterp(j);
                aircraft(i).turningU = myAC.Uinterp(j);
                aircraft(i).turningV = myAC.Vinterp(j);

                aircraft(i).turningRadial = radial;
                j = numel(differentialHDG);
            end
        end
    end


end
end